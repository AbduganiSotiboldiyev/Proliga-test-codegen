// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 829HK5jNiwv3ZTz1XRkY4w
// Component: lHuGvCdxwZ-2

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import {
  executePlasmicDataOp,
  usePlasmicDataOp,
  usePlasmicInvalidate
} from "@plasmicapp/react-web/lib/data-sources";

import Navbar from "../../Navbar"; // plasmic-import: v6dPoFYnJWjC/component
import Clubs from "../../Clubs"; // plasmic-import: iaQjg7bA9bcb/component
import { AntdDropdown } from "@plasmicpkgs/antd5/skinny/registerDropdown";
import { AntdMenuItem } from "@plasmicpkgs/antd5/skinny/registerMenu";
import { AntdButton } from "@plasmicpkgs/antd5/skinny/registerButton";
import { CmsQueryRepeater } from "@plasmicpkgs/plasmic-cms";
import { CmsRowField } from "@plasmicpkgs/plasmic-cms";
import Footer from "../../Footer"; // plasmic-import: n-xKHXNhOEaC/component
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 829HK5jNiwv3ZTz1XRkY4w/projectcss
import sty from "./PlasmicMatches.module.css"; // plasmic-import: lHuGvCdxwZ-2/css

createPlasmicElementProxy;

export type PlasmicMatches__VariantMembers = {};
export type PlasmicMatches__VariantsArgs = {};
type VariantPropType = keyof PlasmicMatches__VariantsArgs;
export const PlasmicMatches__VariantProps = new Array<VariantPropType>();

export type PlasmicMatches__ArgsType = {};
type ArgPropType = keyof PlasmicMatches__ArgsType;
export const PlasmicMatches__ArgProps = new Array<ArgPropType>();

export type PlasmicMatches__OverridesType = {
  root?: Flex__<"div">;
  navbar?: Flex__<typeof Navbar>;
  clubs?: Flex__<typeof Clubs>;
  h2?: Flex__<"h2">;
  dropdown?: Flex__<typeof AntdDropdown>;
  button?: Flex__<typeof AntdButton>;
  footer?: Flex__<typeof Footer>;
};

export interface DefaultMatchesProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicMatches__RenderFunc(props: {
  variants: PlasmicMatches__VariantsArgs;
  args: PlasmicMatches__ArgsType;
  overrides: PlasmicMatches__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  let [$queries, setDollarQueries] = React.useState<
    Record<string, ReturnType<typeof usePlasmicDataOp>>
  >({});

  const new$Queries: Record<string, ReturnType<typeof usePlasmicDataOp>> = {
    matches: usePlasmicDataOp(() => {
      return {
        sourceId: "egnTD9CG9tqC7cm6ya647K",
        opId: "f3483166-d70c-438c-9ee9-c60fd4efdc80",
        userArgs: {},
        cacheKey: `plasmic.$.f3483166-d70c-438c-9ee9-c60fd4efdc80.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    })
  };
  if (Object.keys(new$Queries).some(k => new$Queries[k] !== $queries[k])) {
    setDollarQueries(new$Queries);

    $queries = new$Queries;
  }

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicMatches.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicMatches.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicMatches.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <Clubs
            data-plasmic-name={"clubs"}
            data-plasmic-override={overrides.clubs}
            className={classNames("__wab_instance", sty.clubs)}
          />

          <div className={classNames(projectcss.all, sty.freeBox__sNmN6)}>
            <div className={classNames(projectcss.all, sty.freeBox__q9XLk)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xtKmh
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <h2
                      data-plasmic-name={"h2"}
                      data-plasmic-override={overrides.h2}
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#FFFFFF" }}
                        >
                          {"Matches"}
                        </span>
                      </React.Fragment>
                    </h2>
                  }
                  <React.Fragment>{""}</React.Fragment>
                </React.Fragment>
              </div>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox___1AwvD)}>
            <div className={classNames(projectcss.all, sty.freeBox__lUTb)}>
              <div className={classNames(projectcss.all, sty.freeBox__gQuIp)}>
                <AntdDropdown
                  data-plasmic-name={"dropdown"}
                  data-plasmic-override={overrides.dropdown}
                  className={classNames("__wab_instance", sty.dropdown)}
                  dropdownMenuScopeClassName={sty["dropdown__dropdownMenu"]}
                  menuClassName={classNames({
                    [sty["pcls__A8g_N6myBNI"]]: true
                  })}
                  menuItems={() => (
                    <React.Fragment>
                      <AntdMenuItem
                        className={classNames(
                          "__wab_instance",
                          sty.menuItem__x9DE9
                        )}
                        key={"menu-item-1"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___9Esn8
                          )}
                        >
                          {"Menu item"}
                        </div>
                      </AntdMenuItem>
                      <AntdMenuItem
                        className={classNames(
                          "__wab_instance",
                          sty.menuItem__caNeP
                        )}
                        key={"menu-item-2"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__b0A1R
                          )}
                        >
                          {"Menu item"}
                        </div>
                      </AntdMenuItem>
                    </React.Fragment>
                  )}
                  menuItemsJson={(() => {
                    const __composite = [
                      { type: "item", value: "action1", label: null },
                      { type: "item", value: "action2", label: null },
                      { type: "item", label: null }
                    ];
                    __composite["0"]["label"] = "Fixture 1";
                    __composite["1"]["label"] = "Fixture 2";
                    __composite["2"]["label"] = "Fixture 3";
                    return __composite;
                  })()}
                >
                  <AntdButton
                    data-plasmic-name={"button"}
                    data-plasmic-override={overrides.button}
                    className={classNames("__wab_instance", sty.button)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__acmj6
                      )}
                    >
                      {"Fixture"}
                    </div>
                  </AntdButton>
                </AntdDropdown>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__rlkrU)}>
              <div className={classNames(projectcss.all, sty.freeBox___4DuZ)}>
                <div className={classNames(projectcss.all, sty.freeBox__doIsX)}>
                  <CmsQueryRepeater
                    className={classNames(
                      "__wab_instance",
                      sty.cmsDataFetcher___3S3Vn
                    )}
                    desc={false}
                    emptyMessage={
                      <DataCtxReader__>
                        {$ctx => (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xXqGh
                            )}
                          >
                            {"No matching published entries found."}
                          </div>
                        )}
                      </DataCtxReader__>
                    }
                    fields={["clubsLogo", "clubName", "_id"]}
                    forceEmptyState={false}
                    forceLoadingState={false}
                    limit={10}
                    loadingMessage={
                      <DataCtxReader__>
                        {$ctx => (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vdUrI
                            )}
                          >
                            {"Loading..."}
                          </div>
                        )}
                      </DataCtxReader__>
                    }
                    noAutoRepeat={false}
                    noLayout={false}
                    table={"clubs"}
                    useDraft={false}
                  >
                    <DataCtxReader__>
                      {$ctx => (
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__q3VB9
                          )}
                        >
                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__c9NWy
                            )}
                            field={"clubsLogo"}
                            themeResetClassName={classNames(
                              projectcss.root_reset,
                              projectcss.root_reset_tags,
                              projectcss.plasmic_default_styles,
                              projectcss.plasmic_mixins,
                              projectcss.plasmic_tokens,
                              plasmic_antd_5_hostless_css.plasmic_tokens,
                              plasmic_plasmic_rich_components_css.plasmic_tokens
                            )}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__eylC7
                            )}
                            themeResetClassName={classNames(
                              projectcss.root_reset,
                              projectcss.root_reset_tags,
                              projectcss.plasmic_default_styles,
                              projectcss.plasmic_mixins,
                              projectcss.plasmic_tokens,
                              plasmic_antd_5_hostless_css.plasmic_tokens,
                              plasmic_plasmic_rich_components_css.plasmic_tokens
                            )}
                          />
                        </Stack__>
                      )}
                    </DataCtxReader__>
                  </CmsQueryRepeater>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__slYbi)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wfcqK)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bSb6L
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__qd4Jc
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gosW0)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___2YEEx
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__hGsPo
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__o26Qp)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__dBLnq
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__rpf3
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__kHd44)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__li0Q
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__bpSqW
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mVrrP)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fll7D
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__ii0Oi
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__vdIq1)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___5XmwF
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__wgaSn
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___32DCs)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__i5R7V
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__kzQyj
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wpVBm)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oeG3Y
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__aCf7
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__c29FI)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wFiMr
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__leFbR
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__slh1H)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nWVwh
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__jxN2M
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__nsPct)}>
                  <CmsQueryRepeater
                    className={classNames(
                      "__wab_instance",
                      sty.cmsDataFetcher___7EEm2
                    )}
                    desc={false}
                    emptyMessage={
                      <DataCtxReader__>
                        {$ctx => (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fphOt
                            )}
                          >
                            {"No matching published entries found."}
                          </div>
                        )}
                      </DataCtxReader__>
                    }
                    fields={["clubsLogo", "clubName", "_id"]}
                    forceEmptyState={false}
                    forceLoadingState={false}
                    limit={10}
                    loadingMessage={
                      <DataCtxReader__>
                        {$ctx => (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__eUw2A
                            )}
                          >
                            {"Loading..."}
                          </div>
                        )}
                      </DataCtxReader__>
                    }
                    noAutoRepeat={false}
                    noLayout={false}
                    table={"clubs"}
                    useDraft={false}
                  >
                    <DataCtxReader__>
                      {$ctx => (
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__oOo7R
                          )}
                        >
                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__wVgwP
                            )}
                            themeResetClassName={classNames(
                              projectcss.root_reset,
                              projectcss.root_reset_tags,
                              projectcss.plasmic_default_styles,
                              projectcss.plasmic_mixins,
                              projectcss.plasmic_tokens,
                              plasmic_antd_5_hostless_css.plasmic_tokens,
                              plasmic_plasmic_rich_components_css.plasmic_tokens
                            )}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__nlaX
                            )}
                            field={"clubsLogo"}
                            themeResetClassName={classNames(
                              projectcss.root_reset,
                              projectcss.root_reset_tags,
                              projectcss.plasmic_default_styles,
                              projectcss.plasmic_mixins,
                              projectcss.plasmic_tokens,
                              plasmic_antd_5_hostless_css.plasmic_tokens,
                              plasmic_plasmic_rich_components_css.plasmic_tokens
                            )}
                          />
                        </Stack__>
                      )}
                    </DataCtxReader__>
                  </CmsQueryRepeater>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__bX3UW)}>
                <div className={classNames(projectcss.all, sty.freeBox__qrM)}>
                  <CmsQueryRepeater
                    className={classNames(
                      "__wab_instance",
                      sty.cmsDataFetcher__kbZe3
                    )}
                    desc={false}
                    emptyMessage={
                      <DataCtxReader__>
                        {$ctx => (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oTVqF
                            )}
                          >
                            {"No matching published entries found."}
                          </div>
                        )}
                      </DataCtxReader__>
                    }
                    fields={["clubsLogo", "clubName", "_id"]}
                    forceEmptyState={false}
                    forceLoadingState={false}
                    limit={10}
                    loadingMessage={
                      <DataCtxReader__>
                        {$ctx => (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__tDIx
                            )}
                          >
                            {"Loading..."}
                          </div>
                        )}
                      </DataCtxReader__>
                    }
                    noAutoRepeat={false}
                    noLayout={false}
                    table={"clubs"}
                    useDraft={false}
                  >
                    <DataCtxReader__>
                      {$ctx => (
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__rdoMi
                          )}
                        >
                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField___9MRLq
                            )}
                            field={"clubsLogo"}
                            themeResetClassName={classNames(
                              projectcss.root_reset,
                              projectcss.root_reset_tags,
                              projectcss.plasmic_default_styles,
                              projectcss.plasmic_mixins,
                              projectcss.plasmic_tokens,
                              plasmic_antd_5_hostless_css.plasmic_tokens,
                              plasmic_plasmic_rich_components_css.plasmic_tokens
                            )}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__yRRc
                            )}
                            themeResetClassName={classNames(
                              projectcss.root_reset,
                              projectcss.root_reset_tags,
                              projectcss.plasmic_default_styles,
                              projectcss.plasmic_mixins,
                              projectcss.plasmic_tokens,
                              plasmic_antd_5_hostless_css.plasmic_tokens,
                              plasmic_plasmic_rich_components_css.plasmic_tokens
                            )}
                          />
                        </Stack__>
                      )}
                    </DataCtxReader__>
                  </CmsQueryRepeater>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__aKUt7)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mdEjs)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1Z7ZE
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__ta2Ni
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gDvKg)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__nhIna
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5___1SEc
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__zwWx3)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ye35G
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__s18Ey
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__uqDja)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rd360
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__xXrRq
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wMgr5)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fU3UB
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__ncQxT
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__rzDhK)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vGnos
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__oy7Pp
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__qmGum)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bPjk4
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__nVFyQ
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___51BRx)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__s3OEh
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__dU0N5
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__lHwf3)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__u1S8I
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__rp7J7
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___2H3HS)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ulO3C
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h5
                            className={classNames(
                              projectcss.all,
                              projectcss.h5,
                              projectcss.__wab_text,
                              sty.h5__s9Jyc
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-jgohepLVeKvh)" }}
                              >
                                {"-"}
                              </span>
                            </React.Fragment>
                          </h5>
                        }
                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___4OvI1)}
                >
                  <CmsQueryRepeater
                    className={classNames(
                      "__wab_instance",
                      sty.cmsDataFetcher__uy5Tw
                    )}
                    desc={false}
                    emptyMessage={
                      <DataCtxReader__>
                        {$ctx => (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__b7Ypk
                            )}
                          >
                            {"No matching published entries found."}
                          </div>
                        )}
                      </DataCtxReader__>
                    }
                    fields={["clubsLogo", "clubName", "_id"]}
                    forceEmptyState={false}
                    forceLoadingState={false}
                    limit={10}
                    loadingMessage={
                      <DataCtxReader__>
                        {$ctx => (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pvufO
                            )}
                          >
                            {"Loading..."}
                          </div>
                        )}
                      </DataCtxReader__>
                    }
                    noAutoRepeat={false}
                    noLayout={false}
                    table={"clubs"}
                    useDraft={false}
                  >
                    <DataCtxReader__>
                      {$ctx => (
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__av3N4
                          )}
                        >
                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__hBeSb
                            )}
                            themeResetClassName={classNames(
                              projectcss.root_reset,
                              projectcss.root_reset_tags,
                              projectcss.plasmic_default_styles,
                              projectcss.plasmic_mixins,
                              projectcss.plasmic_tokens,
                              plasmic_antd_5_hostless_css.plasmic_tokens,
                              plasmic_plasmic_rich_components_css.plasmic_tokens
                            )}
                          />

                          <CmsRowField
                            className={classNames(
                              "__wab_instance",
                              sty.cmsEntryField__rGuRc
                            )}
                            field={"clubsLogo"}
                            themeResetClassName={classNames(
                              projectcss.root_reset,
                              projectcss.root_reset_tags,
                              projectcss.plasmic_default_styles,
                              projectcss.plasmic_mixins,
                              projectcss.plasmic_tokens,
                              plasmic_antd_5_hostless_css.plasmic_tokens,
                              plasmic_plasmic_rich_components_css.plasmic_tokens
                            )}
                          />
                        </Stack__>
                      )}
                    </DataCtxReader__>
                  </CmsQueryRepeater>
                </div>
              </div>
            </div>
          </div>
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "navbar", "clubs", "h2", "dropdown", "button", "footer"],
  navbar: ["navbar"],
  clubs: ["clubs"],
  h2: ["h2"],
  dropdown: ["dropdown", "button"],
  button: ["button"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  clubs: typeof Clubs;
  h2: "h2";
  dropdown: typeof AntdDropdown;
  button: typeof AntdButton;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicMatches__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicMatches__VariantsArgs;
    args?: PlasmicMatches__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicMatches__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicMatches__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicMatches__ArgProps,
          internalVariantPropNames: PlasmicMatches__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicMatches__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicMatches";
  } else {
    func.displayName = `PlasmicMatches.${nodeName}`;
  }
  return func;
}

export const PlasmicMatches = Object.assign(
  // Top-level PlasmicMatches renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    clubs: makeNodeComponent("clubs"),
    h2: makeNodeComponent("h2"),
    dropdown: makeNodeComponent("dropdown"),
    button: makeNodeComponent("button"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicMatches
    internalVariantProps: PlasmicMatches__VariantProps,
    internalArgProps: PlasmicMatches__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "matches",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicMatches;
/* prettier-ignore-end */
